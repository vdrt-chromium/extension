{"version":3,"file":"static/js/serviceWorker.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","chrome/utils/changeBadgeText.ts","background/const.ts","utils/formatBadgeText.ts","chrome/utils/tabCallback.ts","background/actions/types.ts","chrome/utils/sendList.ts","background/actions/errorAction.ts","chrome/utils/removeErrorFromPage.ts","utils/getUuId.ts","background/actions/tikTokAction.ts","utils/getVideoObject.ts","utils/getHeaders.ts","background/background.ts","background/actions/defaultAction.ts","background/actions/twitterAction.ts","background/actions/youTubeAction.ts","chrome/utils/searchFbToken.ts","chrome/utils/searchVimeoToken.ts","chrome/utils/searchTwitterToken.ts"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","export const changeBadgeText = (badgeText: string) => {\n    chrome.action.setBadgeText({\n        text: badgeText\n    });\n};","export enum StorageKey {\n    CurrentTab = 'currentTab',\n    Errors = 'errors',\n    VimeoToken = 'vimeoToken',\n    Domains = 'domains',\n}","export const formatBadgeText = (value: string | number) => `${+value > 99 ? '99+' : +value <= 0 ? '' : value}`;","import { formatBadgeText } from \"../../utils\";\nimport { changeBadgeText } from \"./changeBadgeText\";\nimport { StorageKey } from \"../../background/const\";\nimport { SiteWithMediaType } from \"../../types/MediaTypes\";\n\nexport const tabCallback = (tabId: string) => {\n    chrome.storage.local.get([tabId], res => {\n        const videos: SiteWithMediaType[] = res[tabId] ?? [];\n        const badgeText = videos.length ? formatBadgeText(videos.length) : '';\n        changeBadgeText(badgeText);\n    });\n    chrome.storage.local.set({\n        [StorageKey.CurrentTab]: tabId,\n    });\n};","import { TwitterResponseType } from \"../../content/types\";\nimport { MediaHeaders, SiteWithMediaType, VideoType } from \"../../types/MediaTypes\";\n\nexport type ChromeMessageType =\n    DefaultMessageType |\n    TwitterMessageType |\n    PageUpdatedMessageType |\n    TwitterResponseMessageType |\n    ErrorMessageType |\n    TikTokMessageType |\n    TikTokResponseMessageType |\n    YouTubeMessageType |\n    YouTubeResponseMessageType;\n\nexport enum ActionType {\n    Default = 'default',\n    Twitter = 'twitter',\n    PageUpdated = 'pageUpdated',\n    TwitterResponse = 'twitterResponse',\n    Error = 'error',\n    TikTok = 'tikTok',\n    TikTokResponse = 'tikTokResponse',\n    YouTube = 'youTube',\n    YouTubeResponse = 'youTubeResponse',\n}\n\nexport type DefaultMessageType = {\n    action: ActionType.Default;\n    body: SiteWithMediaType;\n}\n\nexport type TwitterMessageType = {\n    action: ActionType.Twitter;\n    body: {\n        tweetId: string;\n    };\n}\n\nexport type PageUpdatedMessageType = {\n    action: ActionType.PageUpdated;\n}\n\nexport type TwitterResponseMessageType = {\n    action: ActionType.TwitterResponse;\n    body: TwitterResponseType;\n}\n\nexport type ErrorMessageType = {\n    action: ActionType.Error;\n    error: string;\n}\n\nexport type TikTokMessageType = {\n    action: ActionType.TikTok;\n    url: string;\n}\n\nexport type TikTokResponseMessageType = {\n    action: ActionType.TikTokResponse;\n    data: {\n        url: string;\n        title: string;\n        headers?: MediaHeaders;\n    };\n}\n\nexport type YouTubeMessageType = {\n    action: ActionType.YouTube;\n    url: string;\n}\n\nexport type YouTubeResponseMessageType = {\n    action: ActionType.YouTubeResponse;\n    data: {\n        list: VideoType[],\n        header: string,\n        id: string\n    };\n}\n","import { ActionType, ChromeMessageType } from \"../../background/actions/types\";\nimport { SiteWithMediaType } from \"../../types/MediaTypes\";\n\nexport const sendList = function (data: SiteWithMediaType) {\n    chrome.runtime.sendMessage<ChromeMessageType>({\n        action: ActionType.Default,\n        body: data,\n    });\n};","import { StorageKey } from \"../const\";\nimport { ErrorMessageType } from \"./types\";\n\nexport const errorAction = (error: ErrorMessageType, sender: chrome.runtime.MessageSender) => {\n    chrome.storage.local.get([StorageKey.Errors], res => {\n        const errors = res[StorageKey.Errors] ?? {};\n        errors[sender.tab?.id ?? 0] = error.error\n\n        chrome.storage.local.set({\n            [StorageKey.Errors]: errors,\n        });\n    });\n}","import { StorageKey } from \"../../background/const\";\n\nexport const removeErrorFromPage = (tabId: number) => {\n    chrome.storage.local.get([StorageKey.Errors], (res) => {\n        const errors = res[StorageKey.Errors] ?? {};\n        delete errors[tabId];\n        chrome.storage.local.set({\n            [StorageKey.Errors]: errors,\n        })\n    })\n\n}","export function getUuId(inputString: string, stringLength: number = 16): string {\n    let resultString = \"\";\n    const inputStringLength = inputString.length;\n\n    for (let i: number = 0; i < stringLength; i++) {\n        resultString += inputString.charAt(Math.floor(Math.random() * inputStringLength));\n    }\n\n    return resultString;\n}\n","import { ActionType, ChromeMessageType, TikTokMessageType } from \"./types\";\nimport { getUuId } from \"../../utils\";\nimport { MediaHeaders } from \"../../types/MediaTypes\";\n\nexport const tikTokAction = (message: TikTokMessageType, sender: chrome.runtime.MessageSender) => {\n    const time = Math.round(Date.now() / 1e3);\n    const params = {\n        aweme_id: message.url.split('/video/')[1],\n        version_name: \"26.1.2\",\n        version_code: \"260102\",\n        build_number: \"26.1.2\",\n        manifest_version_code: \"260102\",\n        update_version_code: \"260102\",\n        openudid: getUuId(\"0123456789abcdef\"),\n        uuid: getUuId(\"0123456789\"),\n        _rticket: 1e3 * time,\n        ts: time,\n        device_brand: \"Google\",\n        device_type: \"Pixel 4\",\n        device_platform: \"android\",\n        resolution: \"1080*1920\",\n        dpi: 420,\n        os_version: \"10\",\n        os_api: \"29\",\n        carrier_region: \"US\",\n        sys_region: \"US\",\n        region: \"US\",\n        app_name: \"trill\",\n        app_language: \"en\",\n        language: \"en\",\n        timezone_name: \"America/New_York\",\n        timezone_offset: \"-14400\",\n        channel: \"googleplay\",\n        ac: \"wifi\",\n        mcc_mnc: \"310260\",\n        is_my_cn: 0,\n        aid: 1180,\n        ssmix: \"a\",\n        as: \"a1qwert123\",\n        cp: \"cbfhckdckkde1\",\n    };\n    const url = \"https://\".concat(\"api16-normal-c-useast1a.tiktokv.com\", \"/aweme/\").concat(\"v1\", \"/\").concat(\"feed\", \"/\") + Object.keys(params).map((function(e, t) {\n        // @ts-ignore\n        return \"\".concat(t > 0 ? \"&\" : \"?\").concat(e, \"=\").concat(params[e]);\n    })).join(\"\");\n\n    fetch(url).then(resp => resp.json())\n        .then((data) => {\n            const videoData = data.aweme_list[0];\n            const headers: MediaHeaders = {\n                'content-length': videoData.video.play_addr.data_size,\n                'content-type': 'video/mp4'\n            };\n            chrome.tabs.sendMessage<ChromeMessageType>(sender.tab?.id ?? 0, {\n                action: ActionType.TikTokResponse,\n                data: { url: videoData.video.play_addr.url_list[0], title: videoData.desc || videoData.aweme_id, headers}\n            }, () => {});\n        });\n}","import { getHeaders } from \"./getHeaders\";\nimport { MediaHeaders, VideoType } from \"../types/MediaTypes\";\n\nexport const getVideoObject = (filename: string, url: string, headers?: MediaHeaders): Promise<VideoType> => {\n    const data = {\n        filename,\n        type: \"video\",\n        url,\n    };\n\n    if(headers) {\n        return new Promise((resolve) => {\n            resolve({\n                ...data,\n                headers\n            })\n        });\n    }\n    else {\n        return getHeaders(url).then((headers) => {\n            return {\n                ...data,\n                headers,\n            }\n        })\n    }\n};","import { MediaHeaders } from \"../types/MediaTypes\";\n\nexport const getHeaders = async (url: string) => {\n    const response = await fetch(url, { method: \"HEAD\" });\n    const headers = {};\n    response.headers.forEach((value, key) => {\n        // @ts-ignore\n        headers[key] = value;\n    });\n    return headers as unknown as MediaHeaders;\n};","import { tabCallback, searchFbToken, searchVimeoToken } from \"../chrome/utils\";\nimport { ActionType, ChromeMessageType } from \"./actions/types\";\nimport { defaultAction, twitterAction, errorAction, tikTokAction } from \"./actions\";\nimport { StorageKey } from \"./const\";\nimport { removeErrorFromPage } from \"../chrome/utils/removeErrorFromPage\";\nimport { youTubeAction } from \"./actions\";\n// @ts-ignore\nimport { statTrackerUrls } from 'browserConst';\nimport { searchTwitterToken } from \"../chrome/utils/searchTwitterToken\";\n\nchrome.runtime.onMessage.addListener((message: ChromeMessageType, sender) => {\n    switch (message.action){\n        case ActionType.Default: {\n            defaultAction(message, sender);\n            break;\n        }\n        case ActionType.Twitter: {\n            twitterAction(message, sender);\n            break;\n        }\n        case ActionType.Error: {\n            errorAction(message, sender);\n            break;\n        }\n        case ActionType.TikTok: {\n            tikTokAction(message, sender);\n            break;\n        }\n        case ActionType.YouTube: {\n            youTubeAction(message, sender);\n            break;\n        }\n    }\n});\n\nchrome.tabs.onActivated.addListener((activeInfo => {\n    tabCallback(`${activeInfo.tabId}`);\n}));\n\nchrome.tabs.onUpdated.addListener((tabId) => {\n    chrome.tabs.sendMessage(tabId, { action: \"pageUpdated\" }, () => {});\n    tabCallback(`${tabId}`);\n});\n\nchrome.tabs.onUpdated.addListener(function(tabId, changeInfo) {\n    if(changeInfo.url) {\n        const url = new URL(changeInfo.url);\n        const domain = url.hostname;\n\n        chrome.storage.local.get([StorageKey.Domains], res => {\n            const domains = res[StorageKey.Domains] ?? {};\n\n            if(!domains[tabId]) {\n                chrome.storage.local.set({\n                    [StorageKey.Domains]: {\n                        ...domains,\n                        [`${tabId}`]: domain,\n                    }\n                })\n            }\n            else {\n                if(domains[tabId] !== domain) {\n                    chrome.storage.local.remove([`${tabId}`]);\n                    chrome.storage.local.set({\n                        [StorageKey.Domains]: {\n                            ...domains,\n                            [`${tabId}`]: domain\n                        }\n                    })\n                    removeErrorFromPage(tabId);\n                }\n            }\n        })\n    }\n});\n\nsearchFbToken();\nsearchVimeoToken();\nsearchTwitterToken();","import { SiteWithMediaType } from \"../../types/MediaTypes\";\nimport { changeBadgeText } from \"../../chrome/utils\";\nimport { DefaultMessageType } from \"./types\";\nimport { formatBadgeText } from \"../../utils\";\n\nexport const defaultAction = ({ body }: DefaultMessageType, sender: chrome.runtime.MessageSender) => {\n    chrome.storage.local.get([`${sender.tab?.id}`], res => {\n        const videos: SiteWithMediaType[] = res[`${sender.tab?.id}`] ?? [];\n        if(!~videos.findIndex(({ id }) => id === body.id)){\n            const sameTabIndex = videos.findIndex((item) => item.header === body.header);\n            if(!!~sameTabIndex){\n                videos[sameTabIndex].list = [...body.list, ...videos[sameTabIndex].list];\n            }\n            else {\n                videos.unshift(body);\n            }\n            chrome.storage.local.set({\n                [`${sender.tab?.id}`]: videos,\n            })\n            changeBadgeText(formatBadgeText(videos.length));\n        }\n    });\n}","import { ActionType, ChromeMessageType, TwitterMessageType } from \"./types\";\nimport { errorAction } from \"./errorAction\";\nimport { removeErrorFromPage } from \"../../chrome/utils/removeErrorFromPage\";\nimport { tabCallback } from \"../../chrome/utils\";\n\nexport const twitterAction = async (message: TwitterMessageType, sender: chrome.runtime.MessageSender) => {\n    const url = `https://api.twitter.com/2/timeline/conversation/${message.body.tweetId}.json?include_profile_interstitial_type=1&include_blocking=1&include_blocked_by=1&include_followed_by=1&include_want_retweets=1&include_mute_edge=1&include_can_dm=1&include_can_media_tag=1&skip_status=1&cards_platform=Web-12&include_cards=1&include_composer_source=true&include_ext_alt_text=true&include_reply_count=1&tweet_mode=extended&include_entities=true&include_user_entities=true&include_ext_media_color=true&include_ext_media_availability=true&send_error_codes=true&simple_quoted_tweets=true&count=20&ext=mediaStats%252ChighlightedLabel%252CcameraMoment`;\n    chrome.storage.local.get('currentTwitterHeaders', (currentTwitterHeaders) => {\n        const headers = currentTwitterHeaders.currentTwitterHeaders.reduce((current: any, {name, value}: any) => {\n            return {\n                ...current,\n                [name]: value,\n            }\n        });\n        fetch(url, {\n            method: 'GET',\n            // @ts-ignore\n            headers,\n        })\n            .then(resp => resp.json())\n            .then(res => {\n                if (res.errors) {\n                    console.error(res.errors);\n                    errorAction({\n                        action: ActionType.Error,\n                        error: \"Login on twitter to download from this site\",\n                    } ,sender);\n                    chrome.storage.local.remove([`${sender.tab?.id!}`]);\n                    tabCallback(`${sender.tab?.id}`);\n                    return;\n                }\n                removeErrorFromPage(sender.tab?.id!)\n                const variants = res.globalObjects.tweets[message.body.tweetId].extended_entities.media[0].video_info.variants;\n                const name = res.globalObjects.users[res.globalObjects.tweets[message.body.tweetId].user_id_str].name;\n                const title = `Video by ${name} (${message.body.tweetId})`;\n                const arr: { url: string; }[] = variants.filter((item: { content_type: string; }) => \"video/mp4\" === item.content_type);\n                chrome.tabs.sendMessage<ChromeMessageType>(sender.tab?.id ?? 0, {\n                    action: ActionType.TwitterResponse,\n                    body: { urls: arr, title }\n                }, () => {});\n            });\n    })\n}","import { ActionType, ChromeMessageType, YouTubeMessageType } from \"./types\";\nimport { VideoType } from \"../../types/MediaTypes\";\nimport { getVideoObject } from \"../../utils\";\n\nexport const youTubeAction = (message: YouTubeMessageType, sender: chrome.runtime.MessageSender) => {\n    const videoUrl = encodeURIComponent(message.url);\n\n    fetch(\"https://yt-info.com/chromium/getinfo.php?\" + new URLSearchParams({\n        videourl: videoUrl\n    })).then(resp => resp.json())\n        .then((res) => {\n            const url = res?.baseurl ?? res?.streaming_url;\n            const title = res?._filename;\n            const list: VideoType[] = [];\n\n            if(url) {\n                getVideoObject(title, url).then(obj => {\n                    if (obj.headers[\"content-length\"] !== \"0\") {\n                        list.push(obj);\n                        chrome.tabs.sendMessage<ChromeMessageType>(sender.tab?.id ?? 0, {\n                            action: ActionType.YouTubeResponse,\n                            data: {\n                                list,\n                                header: title,\n                                id: videoUrl\n                            }\n                        }, () => {});\n                    }\n                });\n            }\n        });\n}","export const searchFbToken = () => {\n    chrome.webRequest.onBeforeSendHeaders.addListener(\n        (details) => {\n            const fbTokenAg = new URL(details.url).searchParams.get('fb_dtsg_ag');\n            if(fbTokenAg) {\n                chrome.storage.local.set({currentFb_dtsgToken: fbTokenAg}, () => {})\n            }\n        },\n        {\n            urls: [\n                \"*://*.facebook.com/video/video_data_async/*\",\n                \"*://*.facebook.com/ajax/*\",\n            ],\n        },\n        [\"requestHeaders\"]\n    );\n}","import { StorageKey } from \"../../background/const\";\n\nexport function searchVimeoToken() {\n    chrome.webRequest.onBeforeSendHeaders.addListener(\n        function(details) {\n            const headers = details.requestHeaders ?? [];\n            let authHeader = null;\n            for (let i = 0; i < headers.length; ++i) {\n                if (headers[i].name === 'Authorization') {\n                    authHeader = headers[i].value;\n                    break;\n                }\n            }\n            if(authHeader) {\n                chrome.storage.local.set({[StorageKey.VimeoToken]: authHeader}, () => {})\n            }\n        },\n        {urls: [\"*://api.vimeo.com/*\"]},\n        [\"requestHeaders\"]\n    );\n}","export const searchTwitterToken = () => {\n    chrome.webRequest.onBeforeSendHeaders.addListener(\n        (details) => {\n            if(details.requestHeaders) {\n                chrome.storage.local.set({currentTwitterHeaders: details.requestHeaders}, () => {})\n            }\n        },\n        {\n            urls: [\n                \"*://*.twitter.com/i/api/*\",\n            ],\n        },\n        [\"requestHeaders\"]\n    );\n}"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","toPropertyKey","t","i","r","e","toPrimitive","call","TypeError","String","Number","_defineProperty","Object","defineProperty","value","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","changeBadgeText","badgeText","chrome","action","setBadgeText","text","StorageKey","formatBadgeText","concat","tabCallback","tabId","storage","local","get","res","_res$tabId","videos","set","CurrentTab","ActionType","errorAction","error","sender","Errors","_res$StorageKey$Error","_sender$tab$id","_sender$tab","errors","tab","id","removeErrorFromPage","getUuId","inputString","stringLength","undefined","resultString","inputStringLength","charAt","Math","floor","random","getVideoObject","filename","url","headers","data","type","Promise","resolve","_objectSpread","async","response","fetch","method","key","getHeaders","then","runtime","onMessage","addListener","message","Default","defaultAction","_ref","body","_res","_sender$tab2","findIndex","_ref2","_sender$tab3","sameTabIndex","item","header","list","unshift","Twitter","tweetId","currentTwitterHeaders","reduce","current","name","resp","json","_sender$tab4","console","Error","remove","variants","globalObjects","tweets","extended_entities","media","video_info","users","user_id_str","title","arr","content_type","tabs","sendMessage","TwitterResponse","urls","twitterAction","TikTok","tikTokAction","time","round","Date","now","params","aweme_id","split","version_name","version_code","build_number","manifest_version_code","update_version_code","openudid","uuid","_rticket","ts","device_brand","device_type","device_platform","resolution","dpi","os_version","os_api","carrier_region","sys_region","region","app_name","app_language","language","timezone_name","timezone_offset","channel","ac","mcc_mnc","is_my_cn","aid","ssmix","as","cp","map","join","videoData","aweme_list","video","play_addr","data_size","TikTokResponse","url_list","desc","YouTube","youTubeAction","videoUrl","encodeURIComponent","URLSearchParams","videourl","_res$baseurl","baseurl","streaming_url","_filename","obj","YouTubeResponse","onActivated","activeInfo","onUpdated","changeInfo","domain","URL","hostname","Domains","_res$StorageKey$Domai","domains","webRequest","onBeforeSendHeaders","details","fbTokenAg","searchParams","currentFb_dtsgToken","_details$requestHeade","requestHeaders","authHeader","VimeoToken"],"sourceRoot":""}